---
name: openwebui
networks:
  traefik-net:
    external: true
secrets:
  tsauthkey:
    file: ${TSAUTHKEY_PATH:-~/.secrets/openwebui-tsauthkey.key}
services:
  openwebui:
    depends_on:
      - tailscale
    network_mode: service:tailscale
  tailscale:
    cap_add:
      - NET_ADMIN
    container_name: ${CONTAINER_NAME:-openwebui}${CONTAINER_NAME_SUFFIX:-}-ts
    devices:
      - /dev/net/tun:/dev/net/tun
    environment:
      - TS_EXTRA_ARGS=--auth-key file:/run/secrets/tsauthkey --accept-dns
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
    healthcheck:
      interval: 10s
      retries: 3
      start_period: 10s
      test: ["CMD", "tailscale", "status"]
      timeout: 5s
    hostname: ${CONTAINER_NAME:-openwebui}${CONTAINER_NAME_SUFFIX:-}
    image: tailscale/tailscale:latest
    labels:
      - "traefik.docker.network=traefik-net"
      - "traefik.enable=true"
      - "traefik.http.middlewares.ip-whitelist.ipallowlist.sourcerange=${IP_WHITELIST:-0.0.0.0/0}"
      - "traefik.http.middlewares.openwebui-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.openwebui.entrypoints=web"
      - "traefik.http.routers.openwebui.middlewares=openwebui-https-redirect"
      - "traefik.http.routers.openwebui.rule=Host(`chat.${DOMAIN}`)"
      - "traefik.http.routers.openwebui-secure.entrypoints=websecure"
      - "traefik.http.routers.openwebui-secure.rule=Host(`chat.${DOMAIN}`)"
      - "traefik.http.routers.openwebui-secure.service=openwebui"
      - "traefik.http.routers.openwebui-secure.tls=true"
      - "traefik.http.services.openwebui.loadbalancer.server.port=8080"
    networks:
      - traefik-net
    restart: unless-stopped
    secrets:
      - tsauthkey
    volumes:
      - tailscale_state:/var/lib/tailscale
volumes:
  tailscale_state:
